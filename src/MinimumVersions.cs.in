using System.Runtime.Versioning;
using ObjCRuntime;

#if __IOS__ && !__MACCATALYST__
[assembly: TargetPlatform ("ios")]
#elif __TVOS__
[assembly: TargetPlatform ("tvos")]
#elif __MACCATALYST__
[assembly: TargetPlatform ("maccatalyst")]
#elif MONOMAC
[assembly: TargetPlatform ("macos")]
#else
	#error Unsupported Platform
#endif

// undecorated API availability falls back to those minimum versions, per platform
[assembly: SupportedOSPlatform (Constants.MinimumVersions.iOS)]
[assembly: SupportedOSPlatform (Constants.MinimumVersions.tvOS)]
[assembly: SupportedOSPlatform (Constants.MinimumVersions.macOS)]
[assembly: SupportedOSPlatform (Constants.MinimumVersions.MacCatalyst)]

namespace ObjCRuntime {
	public static partial class Constants {
		internal static class MinimumVersions {
			internal const string iOS = "ios@DOTNET_MIN_IOS_SDK_VERSION@";
			internal const string tvOS = "tvos@DOTNET_MIN_TVOS_SDK_VERSION@";
			internal const string macOS = "macos@DOTNET_MIN_MACOS_SDK_VERSION@";
			internal const string MacCatalyst = "maccatalyst@DOTNET_MIN_MACCATALYST_SDK_VERSION@";
		}
	}
}
