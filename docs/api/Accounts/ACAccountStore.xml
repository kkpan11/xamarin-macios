<Documentation>
  <Docs DocId="T:Accounts.ACAccountStore">
    <summary>Encapsulates the Accounts database, providing access to <see cref="Accounts.ACAccount" /> objects.</summary>
    <remarks>
      <para>The Accounts database on iOS provides account information for social networks. The social networks stored in the database are:</para>
      <list type="bullet">
        <item>
          <term>
            <see cref="Accounts.ACAccountType.Facebook" />
          </term>
        </item>
        <item>
          <term>
            <see cref="Accounts.ACAccountType.SinaWeibo" />
          </term>
        </item>
        <item>
          <term>
            <see cref="Accounts.ACAccountType.Twitter" />
          </term>
        </item>
      </list>
      <para>
        The following example shows the basic structure of code accessing the <see cref="Accounts.ACAccountStore" /> object, requesting access to a specific account, and retrieving credentials: 
      </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
          var store = new ACAccountStore();
          var type = store.FindAccountType(ACAccountType.Twitter);
          
          store.RequestAccess(type, null, (granted, error) => {
          if(granted){
        ]]></code>
      </example>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/Accounts/Reference/ACAccountStoreClassRef/index.html">Apple documentation for <c>ACAccountStore</c></related>
  </Docs>
  <Docs DocId="P:Accounts.ACAccountStore.ChangeNotification">
        <summary>Notification constant for Change</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <para id="tool-remark">If you want to subscribe to this notification, you can use the convenience <see cref="Accounts.ACAccountStore.Notifications" />.<see cref="ACAccountStore.Notifications.ObserveChange" /> method which offers strongly typed access to the parameters of the notification.</para>
          <para>The following example shows how to use the strongly typed Notifications class, to take the guesswork out of the available properties in the notification:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
//
// Lambda style
//

// listening
notification = ACAccountStore.Notifications.ObserveChange ((sender, args) => {
    /* Access strongly typed args */
    Console.WriteLine ("Notification: {0}", args.Notification);
});

// To stop listening:
notification.Dispose ();

//
// Method style
//
NSObject notification;
void Callback (object sender, Foundation.NSNotificationEventArgs args)
{
    // Access strongly typed args
    Console.WriteLine ("Notification: {0}", args.Notification);
}

void Setup ()
{
    notification = ACAccountStore.Notifications.ObserveChange (Callback);
}

void Teardown ()
{
    notification.Dispose ();
}]]></code>
          </example>
          <para>The following example shows how to use the notification with the DefaultCenter API:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        ACAccountStore.ChangeNotification, (notification) => {Console.WriteLine ("Received the notification ACAccountStore", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification ACAccountStore", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (ACAccountStore.ChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
</Documentation>