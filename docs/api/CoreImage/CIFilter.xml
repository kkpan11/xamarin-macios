<Documentation>
  <Docs DocId="T:CoreImage.CIFilter">
    <summary>CoreImage image filter.</summary>
    <remarks>
      <para>
        On iOS 7.0, the following are the built-in filters:
      </para>
      <para>
        Compositing Filters:
        <list type="bullet"><item><term><see cref="CoreImage.CIAdditionCompositing" /></term></item><item><term><see cref="CoreImage.CIMaximumCompositing" /></term></item><item><term><see cref="CoreImage.CIMinimumCompositing" /></term></item><item><term><see cref="CoreImage.CIMultiplyCompositing" /></term></item><item><term><see cref="CoreImage.CISourceAtopCompositing" /></term></item><item><term><see cref="CoreImage.CISourceInCompositing" /></term></item><item><term><see cref="CoreImage.CISourceOutCompositing" /></term></item><item><term><see cref="CoreImage.CISourceOverCompositing" /></term></item></list></para>
      <para>
        Affine Filters (<see cref="CoreImage.CIAffineFilter" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIAffineClamp" /></term></item><item><term><see cref="CoreImage.CIAffineTile" /></term></item><item><term><see cref="CoreImage.CIAffineTransform" /></term></item></list></para>
      <para>
        Blend Filters (<see cref="CoreImage.CIBlendFilter" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIBlendWithMask" /></term></item><item><term><see cref="CoreImage.CIColorBlendMode" /></term></item><item><term><see cref="CoreImage.CIColorBurnBlendMode" /></term></item><item><term><see cref="CoreImage.CIColorDodgeBlendMode" /></term></item><item><term><see cref="CoreImage.CIDarkenBlendMode" /></term></item><item><term><see cref="CoreImage.CIDifferenceBlendMode" /></term></item><item><term><see cref="CoreImage.CIExclusionBlendMode" /></term></item><item><term><see cref="CoreImage.CIHardLightBlendMode" /></term></item><item><term><see cref="CoreImage.CIHueBlendMode" /></term></item><item><term><see cref="CoreImage.CILightenBlendMode" /></term></item><item><term><see cref="CoreImage.CILuminosityBlendMode" /></term></item><item><term><see cref="CoreImage.CIMultiplyBlendMode" /></term></item><item><term><see cref="CoreImage.CIOverlayBlendMode" /></term></item><item><term><see cref="CoreImage.CISaturationBlendMode" /></term></item><item><term><see cref="CoreImage.CIScreenBlendMode" /></term></item><item><term><see cref="CoreImage.CISoftLightBlendMode" /></term></item></list></para>
      <para>
        Compositing Filters (<see cref="CoreImage.CICompositingFilter" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIAdditionCompositing" /></term></item><item><term><see cref="CoreImage.CIMaximumCompositing" /></term></item><item><term><see cref="CoreImage.CIMinimumCompositing" /></term></item><item><term><see cref="CoreImage.CIMultiplyCompositing" /></term></item><item><term><see cref="CoreImage.CISourceAtopCompositing" /></term></item><item><term><see cref="CoreImage.CISourceInCompositing" /></term></item><item><term><see cref="CoreImage.CISourceOutCompositing" /></term></item><item><term><see cref="CoreImage.CISourceOverCompositing" /></term></item></list></para>
      <para>
        Convolution Filters (<see cref="CoreImage.CIConvolutionCore" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIConvolution3X3" /></term></item><item><term><see cref="CoreImage.CIConvolution5X5" /></term></item><item><term><see cref="CoreImage.CIConvolution9Horizontal" /></term></item><item><term><see cref="CoreImage.CIConvolution9Vertical" /></term></item></list></para>
      <para>
        Distortion Filters (<see cref="CoreImage.CIDistortionFilter" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIBumpDistortion" /></term></item><item><term><see cref="CoreImage.CIBumpDistortionLinear" /></term></item><item><term><see cref="CoreImage.CICircleSplashDistortion" /></term></item><item><term><see cref="CoreImage.CIHoleDistortion" /></term></item><item><term><see cref="CoreImage.CIPinchDistortion" /></term></item><item><term><see cref="CoreImage.CITwirlDistortion" /></term></item><item><term><see cref="CoreImage.CIVortexDistortion" /></term></item></list></para>
      <para>
        Photo Effects (<see cref="CoreImage.CIPhotoEffect" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIPhotoEffectChrome" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectFade" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectInstant" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectMono" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectNoir" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectProcess" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectTonal" /></term></item><item><term><see cref="CoreImage.CIPhotoEffectTransfer" /></term></item></list></para>
      <para>
        Transition Filters (<see cref="CoreImage.CITransitionFilter" />):
        <list type="bullet"><item><term><see cref="CoreImage.CIBarsSwipeTransition" /></term></item><item><term><see cref="CoreImage.CICopyMachineTransition" /></term></item><item><term><see cref="CoreImage.CIDisintegrateWithMaskTransition" /></term></item><item><term><see cref="CoreImage.CIDissolveTransition" /></term></item><item><term><see cref="CoreImage.CIFlashTransition" /></term></item><item><term><see cref="CoreImage.CIModTransition" /></term></item><item><term><see cref="CoreImage.CISwipeTransition" /></term></item></list></para>
      <para>Specialized Filters:
        <list type="bullet"><item><term><see cref="CoreImage.CIBloom" /></term></item><item><term><see cref="CoreImage.CICheckerboardGenerator" /></term></item><item><term><see cref="CoreImage.CIColorClamp" /></term></item><item><term><see cref="CoreImage.CIColorControls" /></term></item><item><term><see cref="CoreImage.CIColorCrossPolynomial" /></term></item><item><term><see cref="CoreImage.CIColorCube" /></term></item><item><term><see cref="CoreImage.CIColorInvert" /></term></item><item><term><see cref="CoreImage.CIColorMap" /></term></item><item><term><see cref="CoreImage.CIColorMatrix" /></term></item><item><term><see cref="CoreImage.CIColorMonochrome" /></term></item><item><term><see cref="CoreImage.CIColorPosterize" /></term></item><item><term><see cref="CoreImage.CIConstantColorGenerator" /></term></item><item><term><see cref="CoreImage.CICrop" /></term></item><item><term><see cref="CoreImage.CIExposureAdjust" /></term></item><item><term><see cref="CoreImage.CIFaceBalance" /></term></item><item><term><see cref="CoreImage.CIFalseColor" /></term></item><item><term><see cref="CoreImage.CIGammaAdjust" /></term></item><item><term><see cref="CoreImage.CIGaussianBlur" /></term></item><item><term><see cref="CoreImage.CIGaussianGradient" /></term></item><item><term><see cref="CoreImage.CIGloom" /></term></item><item><term><see cref="CoreImage.CIHighlightShadowAdjust" /></term></item><item><term><see cref="CoreImage.CIHueAdjust" /></term></item><item><term><see cref="CoreImage.CILanczosScaleTransform" /></term></item><item><term><see cref="CoreImage.CILightTunnel" /></term></item><item><term><see cref="CoreImage.CILinearGradient" /></term></item><item><term><see cref="CoreImage.CILinearToSRGBToneCurve" /></term></item><item><term><see cref="CoreImage.CIMaskToAlpha" /></term></item><item><term><see cref="CoreImage.CIMaximumComponent" /></term></item><item><term><see cref="CoreImage.CIMinimumComponent" /></term></item><item><term><see cref="CoreImage.CIPerspectiveTile" /></term></item><item><term><see cref="CoreImage.CIPerspectiveTransform" /></term></item><item><term><see cref="CoreImage.CIPixellate" /></term></item><item><term><see cref="CoreImage.CIQRCodeGenerator" /></term></item><item><term><see cref="CoreImage.CIRadialGradient" /></term></item><item><term><see cref="CoreImage.CIRandomGenerator" /></term></item><item><term><see cref="CoreImage.CIScreenFilter" /></term></item><item><term><see cref="CoreImage.CISepiaTone" /></term></item><item><term><see cref="CoreImage.CISharpenLuminance" /></term></item><item><term><see cref="CoreImage.CISRGBToneCurveToLinear" /></term></item><item><term><see cref="CoreImage.CIStarShineGenerator" /></term></item><item><term><see cref="CoreImage.CIStraightenFilter" /></term></item><item><term><see cref="CoreImage.CIStripesGenerator" /></term></item><item><term><see cref="CoreImage.CITemperatureAndTint" /></term></item><item><term><see cref="CoreImage.CITileFilter" /></term></item><item><term><see cref="CoreImage.CIToneCurve" /></term></item><item><term><see cref="CoreImage.CITriangleKaleidoscope" /></term></item><item><term><see cref="CoreImage.CIUnsharpMask" /></term></item><item><term><see cref="CoreImage.CIVibrance" /></term></item><item><term><see cref="CoreImage.CIVignette" /></term></item><item><term><see cref="CoreImage.CIVignetteEffect" /></term></item><item><term><see cref="CoreImage.CIWhitePointAdjust" /></term></item></list></para>
      <para>
        To create a filter of the specified type, instantiate an
        instance of one of the above types, assign values to their
        properties and extract the result by using the OutputImage
        property.
        
      </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
          var sepiaFilter = new CISepiaTone () {
          Image = mySourceImage,
          Intensity = 0.8f
          };
        ]]></code>
      </example>
      <para>
        You can chain your filters as well:
      </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
          var sepiaFilter = new CISepiaTone () {
          Image = mySourceImage,
          Intensity = .8f
          };
          var invert = new CIColorInvert () {
          Image = sepia.OutputImage
          };
        ]]></code>
      </example>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/GraphicsImaging/Reference/QuartzCoreFramework/Classes/CIFilter_Class/index.html">Apple documentation for <c>CIFilter</c></related>
  </Docs>
  <Docs DocId="M:CoreImage.CIFilter.FromName(System.String)">
    <param name="name">The name of the CoreImage filter to instantiate.</param>
    <summary>Returns a CIFilter for the specific effect.</summary>
    <returns>To be added.</returns>
    <remarks>
      <para>
            On iOS 5.0, the following are the built-in filters:
            <see cref="CoreImage.CIFilterCategory.Blur" />, <see cref="CoreImage.CIFilterCategory.ColorEffect" />,
            <see cref="CoreImage.CIAdditionCompositing" />,
            <see cref="CoreImage.CIAffineTransform" />,
            <see cref="CoreImage.CICheckerboardGenerator" />,
            <see cref="CoreImage.CIColorBlendMode" />,
            <see cref="CoreImage.CIColorBurnBlendMode" />,
            <see cref="CoreImage.CIColorControls" />,
            <see cref="CoreImage.CIColorCube" />,
            <see cref="CoreImage.CIColorDodgeBlendMode" />,
            <see cref="CoreImage.CIColorInvert" />,
            <see cref="CoreImage.CIColorMatrix" />,
            <see cref="CoreImage.CIColorMonochrome" />,
            <see cref="CoreImage.CIConstantColorGenerator" />,
            <see cref="CoreImage.CICrop" />,
            <see cref="CoreImage.CIDarkenBlendMode" />,
            <see cref="CoreImage.CIDifferenceBlendMode" />,
            <see cref="CoreImage.CIExclusionBlendMode" />,
            <see cref="CoreImage.CIExposureAdjust" />,
            <see cref="CoreImage.CIFalseColor" />,
            <see cref="CoreImage.CIGammaAdjust" />,
            <see cref="CoreImage.CIGaussianGradient" />,
            <see cref="CoreImage.CIHardLightBlendMode" />,
            <see cref="CoreImage.CIHighlightShadowAdjust" />,
            <see cref="CoreImage.CIHueAdjust" />,
            <see cref="CoreImage.CIHueBlendMode" />,
            <see cref="CoreImage.CILightenBlendMode" />,
            <see cref="CoreImage.CILinearGradient" />,
            <see cref="CoreImage.CILuminosityBlendMode" />,
            <see cref="CoreImage.CIMaximumCompositing" />,
            <see cref="CoreImage.CIMinimumCompositing" />,
            <see cref="CoreImage.CIMultiplyBlendMode" />,
            <see cref="CoreImage.CIMultiplyCompositing" />,
            <see cref="CoreImage.CIOverlayBlendMode" />,
            <see cref="CoreImage.CIRadialGradient" />,
            <see cref="CoreImage.CISaturationBlendMode" />,
            <see cref="CoreImage.CIScreenBlendMode" />,
            <see cref="CoreImage.CISepiaTone" />,
            <see cref="CoreImage.CISoftLightBlendMode" />,
            <see cref="CoreImage.CISourceAtopCompositing" />,
            <see cref="CoreImage.CISourceInCompositing" />,
            <see cref="CoreImage.CISourceOutCompositing" />,
            <see cref="CoreImage.CISourceOverCompositing" />,
            <see cref="CoreImage.CIStraightenFilter" />,
            <see cref="CoreImage.CIStripesGenerator" />,
            <see cref="CoreImage.CITemperatureAndTint" />,
            <see cref="CoreImage.CIToneCurve" />,
            <see cref="CoreImage.CIVibrance" />,
            <see cref="CoreImage.CIVignette" /> and <see cref="CoreImage.CIWhitePointAdjust" />.
            
          </para>
      <para>
            To create a filter of the specified type, instantiate an
            instance of one of the above types, assign values to their
            properties and extract the result by using the OutputImage
            property.
            
          </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
              var sepiaFilter = new CISepiaTone () {
              Image = mySourceImage,
              Intensity = 0.8f
              };
            ]]></code>
      </example>
    </remarks>
  </Docs>
</Documentation>