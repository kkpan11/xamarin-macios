<Documentation>
  <Docs DocId="T:UIKit.UIInputView">
    <summary>A <see cref="UIKit.UIView" /> that matches the appearance of the system keyboard.</summary>
    <remarks>
      <para>Application developers who wish to customize the appearance of the system keyboard can inherit from this class and add appropriate subviews.</para>
      <para>To use a custom <see cref="UIKit.UIInputView" />, application developers should assign the custom class to the <see cref="UIKit.UITextView.InputView" /> property:</para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
var textField = new UITextField(new CGRect(20, 40, 300, 41));
var inputView = new MyCustomInputView(new CGRect(0, 0, UIScreen.MainScreen.Bounds.Width, 80), UIInputViewStyle.Keyboard);
textField.InputView = inputView;
          ]]></code>
      </example>
      <para>
        <img href="~/UIKit/_images/UITextView.InputView.png" alt="Ilustration of a UIView with an input view" />
      </para>
      <para>Notifications relating to keyboard display (<see cref="UIKit.UIKeyboard.Notifications.ObserveWillShow" />, <see cref="UIKit.UIKeyboard.Notifications.ObserveDidShow" />, <see cref="UIKit.UIKeyboard.Notifications.ObserveWillHide" />, <see cref="UIKit.UIKeyboard.Notifications.ObserveDidHide" /> ) will continue to be sent for custom input views. The <c>Frame</c> value in those methods accounts for both the <see cref="UIKit.UIInputView" /> and the <see cref="UIKit.UITextField.InputAccessoryView" /> (if one is assigned).</para>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIInputView_class/index.html">Apple documentation for <c>UIInputView</c></related>
  </Docs>
</Documentation>