<Documentation>
  <Docs DocId="P:NetworkExtension.NEVpnManager.ConfigurationChangeNotification">
        <summary>Notification constant for ConfigurationChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        NEVpnManager.ConfigurationChangeNotification, (notification) => {Console.WriteLine ("Received the notification NEVpnManager", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification NEVpnManager", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (NEVpnManager.ConfigurationChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
  <Docs DocId="P:NetworkExtension.NEVpnManager.ConfigurationChangeNotification">
        <summary>Notification constant for ConfigurationChange</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        NEVpnManager.ConfigurationChangeNotification, (notification) => {Console.WriteLine ("Received the notification NEVpnManager", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification NEVpnManager", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (NEVpnManager.ConfigurationChangeNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
</Documentation>